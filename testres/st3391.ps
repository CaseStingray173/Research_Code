%!PS-Adobe-3.0
%%Creator: Steiner Tree Version 3.1
%%Copyright: Copyright (c) 1998, 2001 by David M. Warme
%%LanguageLevel: 1
%%DocumentNeededResources: font Times-Roman
%%DocumentSuppliedResources: procset SteinerTreeProcs 2.0 0
%%EndComments
%%BeginProlog
%%BeginProcSet: SteinerTreeProcs 2.0 0
/LabelTerminals	0		def	% set non-zero to label terminals
/inch { 72 mul } def
/PaperWidth	8.5 inch	def
/PaperHeight	11 inch		def
/BigBoxSize	7 inch		def
/SmallBoxSize	2 inch		def
/SmallBoxHeight	SmallBoxSize	def
/SmallBoxWidth	SmallBoxSize	def
/BoxHeight	BigBoxSize	def
/BoxWidth	BigBoxSize	def
/MinX		0		def
/MaxX		1		def
/MinY		0		def
/MaxY		1		def
/BoxMode	0		def	% (0 ==> big plot, 1 ==> small plots)
/SmallBoxCount	0		def
/TermRadius	1 32 div inch	def
/LineWidth	currentlinewidth	def

% Define the clipping region to be the inside edge of the box.

/ClipHeight	BigBoxSize LineWidth sub def
/ClipWidth	ClipHeight def

% Define the plotting region so that points plotted at the extremes will
% exactly meet the edge of the clipping region.  (Reduce by the terminal
% radius on each side.)

/PlotHeight	ClipHeight TermRadius 2 mul sub def
/PlotWidth	ClipWidth  TermRadius 2 mul sub	def
/XlateX { MinX sub MaxX MinX sub div PlotWidth mul } def
/XlateY { MinY sub MaxY MinY sub div PlotHeight mul } def
/XlateXY { exch XlateX exch XlateY } def
/Dup2 { dup 3 -1 roll dup 4 1 roll exch } def
/Swap2 { 4 2 roll } def
% define the two fonts we will use:
%	- one for numbering the terminals
%	- one for printing the plot's title
/TermNumPointsize	8	def
/TitlePointsize		15	def
/TermNumFont
	/Times-Roman findfont TermNumPointsize scalefont
def
/UseTermNumFont { TermNumFont setfont } def
/TitleFont
	/Times-Roman findfont TitlePointsize scalefont
def
/UseTitleFont { TitleFont setfont } def
/DefineTerminals {
	/NumTerms exch def
	/TermX NumTerms array def
	/TermY NumTerms array def
	/TermIndex 0 def
} def
/DT {
	TermY TermIndex 3 -1 roll put
	TermX TermIndex 3 -1 roll put
	/TermIndex TermIndex 1 add def
} def
/SetAxes {	% minx maxx miny maxy
	/MaxY exch def
	/MinY exch def
	/MaxX exch def
	/MinX exch def
} def
/PTString	12 string	def
/Plot_Terminals {
	LabelTerminals 0 eq {
		% Display terminals, no labels
		0 1 NumTerms 1 sub {			% i
			dup				% i i
			TermX exch get exch		% x i
			TermY exch get
			newpath
			XlateXY
			TermRadius 0 360 arc fill
		} for
	}
	{	% Display terminals, with labels
		0 1 NumTerms 1 sub {			% i
			dup				% i i
			PTString cvs exch dup		% str i i
			TermX exch get exch		% str x i
			TermY exch get			% str x y
			newpath
			XlateXY
			Dup2
			TermRadius 0 360 arc fill
			moveto TermRadius 3 mul dup neg rmoveto
			UseTermNumFont
			show
		} for
	} ifelse
} def
% n T ==> Xn Yn, get coordinates of terminal n.
/T {
	dup
	TermX exch get exch
	TermY exch get
} def
% Draw a line segment.
/S {
	newpath
	XlateXY
	moveto
	XlateXY
	lineto
	stroke
} def
% Draw a corner.  First point is incident to vertical segment.
% Second point is incident to horizontal segment.
/C {	% x1 y1 x2 y2
	newpath
	% x1 y1 x2 y2 -> x1 y1 x1 y2 x2 y2
	4 -1 roll dup 5 1 roll exch dup 4 -1 roll exch
	XlateXY
	moveto
	XlateXY
	lineto
	XlateXY
	lineto
	stroke
} def
/BeginPlot {
	FlushSmallPlot
	gsave
	PaperWidth BoxWidth sub 2 div
	 PaperHeight BoxHeight sub 2 div
	  translate
	newpath
	0 0 moveto
	BoxWidth 0 lineto
	BoxWidth BoxHeight lineto
	0 BoxHeight lineto
	closepath
	stroke
	gsave
	% establish a clipping region at the inside edge of the box
	LineWidth 2 div dup moveto
	ClipWidth 0 rlineto
	0 ClipHeight rlineto
	ClipWidth neg 0 rlineto
	closepath
	clip
	% establish the origin for the plotting region
	LineWidth 2 div TermRadius add
	 dup
	  translate
} def
/EndPlot {
	grestore
	newpath
	UseTitleFont
	0 0 moveto
		dup stringwidth pop BigBoxSize exch sub 2 div
		TitlePointsize -2 mul
	rmoveto
	show
	grestore
	showpage
} def
/BeginSmallPlot {
	gsave
	.75 inch SmallBoxCount 3 mod SmallBoxWidth .5 inch add mul add
	  .75 inch 3 SmallBoxCount 3 idiv sub SmallBoxHeight .5 inch add mul add
	    translate
	SmallBoxWidth BoxWidth div
	 SmallBoxHeight BoxHeight div
	  scale
	newpath
	0 0 moveto
	BoxWidth 0 lineto
	BoxWidth BoxHeight lineto
	0 BoxHeight lineto
	closepath
	stroke
	gsave
	% establish a clipping region at the inside edge of the box
	LineWidth 2 div dup moveto
	ClipWidth 0 rlineto
	0 ClipHeight rlineto
	ClipWidth neg 0 rlineto
	closepath
	clip
	% establish the origin for the plotting region
	LineWidth 2 div TermRadius add
	 dup
	  translate
} def
/EndSmallPlot2 {
	grestore
	newpath
	UseTitleFont
	0 0 moveto
		dup stringwidth pop BigBoxSize exch sub 2 div
		TitlePointsize -2 mul
	rmoveto
	show
	grestore
	/SmallBoxCount SmallBoxCount 1 add def
	SmallBoxCount 12 ge {
		FlushSmallPlot
	} if
} def
/FlushSmallPlot {
	SmallBoxCount 0 gt {
		showpage
		/SmallBoxCount	0 def
	} if
} def
/PT {
	dup				% i i
	TermX exch get exch		% x i
	TermY exch get
	newpath
	XlateXY
	TermRadius 0 360 arc fill
} def
%%EndProcSet
%%EndProlog

 % ./bb
 % Args:
 % Phase 1: 0.01 seconds

%%BeginSetup

0 1 0 1 SetAxes

10 DefineTerminals
	.5994683504104614	.3264754414558410	DT
	.9684790968894957	.8424752950668334	DT
	.4897440075874328	.3633956313133239	DT
	.4866868853569031	.5496684908866882	DT
	.3255213499069214	.5202097892761229	DT
	.8250207901000976	.7126811146736145	DT
	.9207090735435485	.7427349686622620	DT
	.7201724052429198	.8072171807289123	DT
	.9405527710914612	.5743563771247864	DT
	.0181297659873962	.0738058090209960	DT

%%EndSetup

 % initialize_constraint_pool: 0.00 seconds.
 % Constraint pool initialized with:
 %	1	Total degree rows	15	coeffs.
 %	10	Cutset rows		37	coeffs.
 %	0	Incompatibility rows	0	coeffs.
 %	10	2-terminal SEC rows	25	coeffs.
 %	21	Total rows in pool	11	in LP
 % @PMEM 21 rows, 1 blocks, 210 nzfree, 0 nzwasted, 308 nztotal
 % build_initial_formulation: 0.00 seconds.
% Resuming node 0
  % @PAP adding 11 rows, 52 nz to LP
  % @PL 11 rows, 15 cols, 67 nonzeros, 4 slack, 7 tight.
  % @PAP adding 2 rows, 4 nz to LP
  % @PL 13 rows, 15 cols, 71 nonzeros, 5 slack, 8 tight.
  % @PAP adding 1 rows, 3 nz to LP
  % @PL 14 rows, 15 cols, 74 nonzeros, 4 slack, 10 tight.
  % @PAP adding 1 rows, 2 nz to LP
  % @PL 15 rows, 15 cols, 76 nonzeros, 4 slack, 11 tight.
  % @PAP adding 1 rows, 4 nz to LP
  % @PL 16 rows, 15 cols, 80 nonzeros, 4 slack, 12 tight.
  % @PAP adding 1 rows, 3 nz to LP
  % @PL 17 rows, 15 cols, 83 nonzeros, 5 slack, 12 tight.
  % Node 0 LP 1 Solution, length = 170291384435183.687500, 0.01 0
 % 0 fractional variables
 % @LO 0.01   1.70291384435183679180 99.9000000000
 % @LN 0.01   1.70291384435183679180 99.9000000000
 % @UO 0.01   1.82633593000236382764 6.7579071091
 % @UN 0.01   1.82633593000236382764 6.7579071091
 % Fixed 1 vars to 0 and 0 vars to 1.
 % @cutset: 2 connected components.
 % initially 3 congested vertices:
 % find_congested_components found 1 components:
 %	component 0:	3 verts,	3 edges
 % @D deleting 5 slack rows
  % @PAP adding 2 rows, 8 nz to LP
 % @PMEM 23 rows, 1 blocks, 200 nzfree, 0 nzwasted, 308 nztotal
  % @PL 14 rows, 15 cols, 65 nonzeros, 4 slack, 10 tight.
  % @PAP adding 1 rows, 2 nz to LP
  % @PL 15 rows, 15 cols, 67 nonzeros, 0 slack, 15 tight.
  % Node 0 LP 2 Solution, length = 182633593000236.375000, 0.00/0.00/0.00/0.00/0.00/0.00/0.00 2
  %       0     0        cutoff182633593000236.3750
 % @LO 0.01   1.70291384435183679180 6.7579071091
 % @LN 0.01   1.82633593000236382764 0.0000000000

 % Certificate of solution:
 % @C	.7297663651670406	.7486646084896759
 % @C	.8894307369006996	.7032154024731010
 % @C	.3354442145801593	.4969867114386306
 % @C	.4379339075472035	.4846499289001410
%%Page: 1 1
BeginPlot
	Plot_Terminals
 % fs3: 7 5 3
	7 T	.7297663651670406	.7486646084896759	S
	.7297663651670406	.7486646084896759	5 T	S
	.7297663651670406	.7486646084896759	3 T	S
 % fs4: 8 5 6
	8 T	.8894307369006996	.7032154024731010	S
	.8894307369006996	.7032154024731010	5 T	S
	.8894307369006996	.7032154024731010	6 T	S
 % fs5: 9 4 3 2
	9 T	.3354442145801593	.4969867114386306	S
	.3354442145801593	.4969867114386306	4 T	S
	.3354442145801593	.4969867114386306	.4379339075472035	.4846499289001410	S
	.4379339075472035	.4846499289001410	3 T	S
	.4379339075472035	.4846499289001410	2 T	S
 % fs7: 6 1
	6 T	1 T	S
 % fs8: 0 2
	0 T	2 T	S
  (Steiner Minimal Tree:  10 points,  length = 1.826335930002363,  0.02 seconds)
EndPlot

% @0 
% N M Nodes LPs P1CPU P2CPU TotCPU
% @1 10 15 1 2 0.01 0.01 0.02
% Z RootZ %Gap RootLPs RootCPU RedMST
% @2 1.826335930002363 (1.826336) 0.00000 2 0.01 2.7065
% InitPRows InitPNZ InitLPRows InitLPNZ
% @3 21 77 11 67
% RootPRows RootPNZ RootLPRows RootLPNZ
% @4 23 85 15 67
% FinalPRows FinalPNZ FinalLPRows FinalLPNZ
% @5 23 85 15 67
% SMTFSTs SMTAvgFSTSz SMTMaxFSTSz #2FSTs #3FSTs ... #10FSTS #>10FSTs
% @6 5 2.800000 4 2 2 1 0 0 0 0 0 0 0
